
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hassan Akhlaq
 */
public class UploadFileForm extends javax.swing.JFrame {

    /**
     * Creates new form UploadFileForm
     * 
     */
    
    public UploadFileForm() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        usernameL.setText(Helper.username);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        uploadFilesB = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        policyRB = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        searchDate = new com.toedter.calendar.JDateChooser();
        searchB = new javax.swing.JLabel();
        usernameL = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        closeB1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(32, 47, 90));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(106, 116, 145));

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Upload File");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jLabel11)
                .addContainerGap(284, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, 690, 40));

        uploadFilesB.setBackground(new java.awt.Color(0, 18, 50));
        uploadFilesB.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        uploadFilesB.setForeground(new java.awt.Color(255, 255, 255));
        uploadFilesB.setText("Upload");
        uploadFilesB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        uploadFilesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFilesBActionPerformed(evt);
            }
        });
        jPanel2.add(uploadFilesB, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 190, 50));

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("You are about to Upload a file (Document/Picture) from your Computer");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        policyRB.setBackground(new java.awt.Color(32, 47, 90));
        policyRB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        policyRB.setForeground(new java.awt.Color(255, 255, 255));
        policyRB.setText("I agree to Terms & Conditions and Privacy Policy & have uploaded all Components");
        jPanel2.add(policyRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 830, 300));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(searchDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 240, 30));

        searchB.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        searchB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Search_25px.png"))); // NOI18N
        searchB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBMouseClicked(evt);
            }
        });
        jPanel4.add(searchB, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));

        usernameL.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        usernameL.setText("User");
        jPanel4.add(usernameL, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_User_25px.png"))); // NOI18N
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, -1, -1));

        closeB1.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        closeB1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Cancel_20px.png"))); // NOI18N
        closeB1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeB1MouseClicked(evt);
            }
        });
        jPanel4.add(closeB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 8, 30, 30));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 830, 50));

        jPanel1.setBackground(new java.awt.Color(0, 18, 50));
        jPanel1.setPreferredSize(new java.awt.Dimension(40, 285));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 27, -1, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_Back_20px.png"))); // NOI18N
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 265, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 40, 550));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 48)); // NOI18N
        jLabel2.setText("Torn Image Reconstruction");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        jLabel3.setText("Feel free to repair your torn images..!!");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 830, 200));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadFilesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFilesBActionPerformed
        // TODO add your handling code here:
        
        if(this.policyRB.isSelected())
        {
            FileFilter filter = new FileNameExtensionFilter("Images", "jpg");
            JFileChooser filechooser = new JFileChooser("F:\\Hassan Bhai\\Success");
            filechooser.setMultiSelectionEnabled(true);
            filechooser.setFileFilter(filter);
            int return_value = filechooser.showOpenDialog(this);

            if (return_value == JFileChooser.APPROVE_OPTION)
            {
                File [] files = filechooser.getSelectedFiles();

                if(checkfilesClean(files)==true)
                {
                    Helper.docsPath = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
                    Helper.docsPath+="\\TornImageReconstruction\\";
                    File tempDocsPath = new File(Helper.docsPath);
                    if(!tempDocsPath.exists())
                    {
                        tempDocsPath.mkdirs();
                    }
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH.mm.ss");  
                    LocalDateTime now = LocalDateTime.now();
                    Helper.actionDate = new Date();
                    File destFolder = new File(Helper.docsPath,now.format(dtf).toString());      
                    destFolder.mkdirs();
                    Helper.imgFolderPath = destFolder.getPath();
                    
                    int counter = 1;
                    File destFile;
                    boolean hasSampleImage = false;
                    for (File file : files) {
                        try 
                        {
                            if(file.getName().contains("sample"))
                            {
                                destFile = new File(destFolder.getAbsolutePath()+"\\sample.jpg");
                                hasSampleImage = true;
                                Files.copy(file.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                            }
                            else if(!file.getName().contains("result"))
                            {
                                destFile = new File(destFolder.getAbsolutePath()+"\\"+ counter +".jpg");
                                Files.copy(file.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                                counter++;
                            }
                        } 
                        catch (IOException ex) {
                            Logger.getLogger(UploadFileForm.class.getName()).log(Level.SEVERE, null, ex);
                        }   
                    }
                    if(hasSampleImage==true)
                    {
                        FileManipulationForm filemanipulationform = new FileManipulationForm();
                        filemanipulationform.setVisible(true);
                        this.setVisible(false);
                        this.dispose();
                    }
                    else
                        JOptionPane.showMessageDialog(rootPane,"Please provide sample image", "Missing Sample Image", JOptionPane.ERROR_MESSAGE);

                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane,"Please select only JPG files", "Invalid Images", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        else 
        {
           JOptionPane.showMessageDialog(rootPane,"Please agree with Terms and Condition first", "Terms and Condition Error", JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_uploadFilesBActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        UserPanelForm form = new UserPanelForm();
        this.setVisible(false);
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void searchBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBMouseClicked
        if(this.searchDate.getDate()!=null)
        {
            Helper.searchDate=this.searchDate.getDate();
            Helper.searchFlag = true;
            RecordsForm form;
            try {
                form = new RecordsForm();
                this.setVisible(false);
                form.setVisible(true);
                this.dispose();
            } catch (SQLException | ParseException ex) {
                Logger.getLogger(UserPanelForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchBMouseClicked

    private void closeB1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeB1MouseClicked
        int option = JOptionPane.showConfirmDialog(rootPane, "Are you sure to quit the Program");
        if(option==JOptionPane.OK_OPTION)
        {
            DBHandler.closeConnection();
            System.exit(0);
        }
    }//GEN-LAST:event_closeB1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UploadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UploadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UploadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UploadFileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UploadFileForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closeB1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton policyRB;
    private javax.swing.JLabel searchB;
    private com.toedter.calendar.JDateChooser searchDate;
    private javax.swing.JButton uploadFilesB;
    private javax.swing.JLabel usernameL;
    // End of variables declaration//GEN-END:variables

    private boolean checkfilesClean(File [] files) {
        boolean filesClean = true;
        String extension = "";
        String fileName ="";
        int i = -1;
            
        for (File file : files) {
                fileName = file.getName();
                if(!fileName.endsWith(".jpg"))
                {
                    filesClean=false;
                    break;
                }
            }
        return filesClean;
    }
}
